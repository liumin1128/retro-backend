type Query {
  myOrganizations: [Organization]
  currentOrganization: Organization
  currentOrganizationUsers: [User]
  userToOrganizations(user: ID, organization: ID): [UserToOrganization]
  userToOrganization(_id: ID!): UserToOrganization
}

type Mutation {
  createOrganization(input: CreateOrganizationInput): Organization
  organizationInviteUser(input: OrganizationInviteUserInput): UserToOrganization
  organizationRemoveUser(input: OrganizationRemoveUserInput): UserToOrganization
}

type Subscription {
  userToOrganizationCreated: UserToOrganization
}

type UserToOrganization implements Document {
  _id: ID! @upper
  createdAt: String
  updatedAt: String

  isCurrent: Boolean

  user: User!
  organization: Organization!
}

input OrganizationInviteUserInput {
  user: ID!
  organization: ID!
}

input OrganizationRemoveUserInput {
  user: ID!
  organization: ID!
}
