type Query {
  findComments(object: ID!): [Comment]
  findComment(_id: ID!): Comment
}

type Mutation {
  createComment(input: CreateCommentInput): Comment
}

type Subscription {
  commentCreated: Comment
}

type Comment implements Document {
  _id: ID! @upper
  createdAt: String
  updatedAt: String
  content: String
  object: CommentObjectUnion!
  user: User
}

input CreateCommentInput {
  content: String
  object: ID!
  objectModel: CommentObjectUnionModel!
}

union CommentObjectUnion = News | Comment | RetroMessage

enum CommentObjectUnionModel {
  News
  Dynamic
  Comment
  RetroMessage
}
