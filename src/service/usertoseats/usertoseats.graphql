type Query {
  findUserToSeats(
    startDate: Float
    endDate: Float
    seat: ID
    user: ID
  ): [UserToSeat]
  findUserToSeat(_id: ID!): UserToSeat
}

type Mutation {
  createUserToSeat(input: CreateUserToSeatInput): UserToSeat
  deleteUserToSeat(input: DeleteUserToSeatInput): UserToSeat
  toggleUserToSeat(input: ToggleUserToSeatInput): UserToSeat
}

type Subscription {
  userToSeatCreated(
    startDate: Float
    endDate: Float
    seat: ID
    user: ID
  ): UserToSeat
  userToSeatDeleted(
    startDate: Float
    endDate: Float
    seat: ID
    user: ID
  ): UserToSeat
}

type UserToSeat implements Document {
  _id: ID! @upper
  createdAt: String
  updatedAt: String

  user: User
  seat: Seat
  date: Float
  cancel: Boolean
}

input ToggleUserToSeatInput {
  user: ID!
  seat: ID!
  date: Float!
}

input CreateUserToSeatInput {
  seat: ID
  date: Float
}

input DeleteUserToSeatInput {
  seat: ID
  date: Float
}
