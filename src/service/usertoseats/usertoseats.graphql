type Query {
  findUserToSeats: [UserToSeat]
  findUserToSeat(_id: ID!): UserToSeat
}

type Mutation {
  createUserToSeat(input: CreateUserToSeatInput): UserToSeat
}

type Subscription {
  userToSeatCreated: UserToSeat
}

type UserToSeat implements Document {
  _id: ID! @upper
  createdAt: String
  updatedAt: String
  user: User
  category: String
  name: String
  cover: String
  icon: String
}

input CreateUserToSeatInput {
  category: String
  name: String!
  cover: String
  icon: String
}
