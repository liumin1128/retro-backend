type Query {
  retroMessages: [RetroMessage]
  retroMessage(_id: ID!): RetroMessage
}

type Mutation {
  createRetroMessage(input: CreateRetroMessageInput): RetroMessage
  updateRetroMessage(_id: ID, input: UpdateRetroMessageInput): RetroMessage
  deleteRetroMessage(_id: ID): RetroMessage
}

type Subscription {
  retroMessageCreated: RetroMessage
  retroMessageUpdated: RetroMessage
  retroMessageDeleted: RetroMessage
}

type RetroMessage implements Document {
  _id: ID!
  createdAt: String
  updatedAt: String
  content: String
  status: String
}

enum RetroMessageStatus {
  NORMAL,
  CLOSED,
}

input CreateRetroMessageInput {
  content: String
}

input UpdateRetroMessageInput {
  content: String
  status: RetroMessageStatus
}