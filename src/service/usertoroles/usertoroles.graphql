type Query {
  findSeatSelectionUsers(
    limit: Int
    skip: Int
    role: ID
    user: ID
  ): [UserWithRole]
  findUserToRoles: [UserToRole]
  findUserToRole(_id: ID!): UserToRole
}

type Mutation {
  createUserToRole(input: CreateUserToRoleInput): UserToRole
}

type Subscription {
  userToRoleCreated: UserToRole
}

type UserToRole implements Document {
  _id: ID! @upper
  createdAt: String
  updatedAt: String

  user: User!
  role: UserRole!
  scope: String!
}

input CreateUserToRoleInput {
  user: ID!
  role: ID!
  scope: String!
}

type UserWithRole {
  _id: ID! @upper
  username: String
  nickname: String
  avatarUrl: String
  roles: [UserRole]
}
